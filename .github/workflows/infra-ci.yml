name: Infrastructure - Continuous Integration

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - staging
      - release
    paths:
      - '.github/workflows/infra-ci.yml'
      - 'infra/deploy/**'

env:
  AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform-fmt-validate-plan:
    name: Terraform format, validate, and plan
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set vars
        run: |
          if [[ $GITHUB_BASE_REF == 'main' ]]; then
            echo "prod" > .workspace
          elif [[ $GITHUB_BASE_REF == 'staging' ]]; then
            echo "staging" > .workspace
          elif [[ $GITHUB_BASE_REF == 'release' ]]; then
            echo "release" > .workspace
          fi
      - name: Terraform init
        run: docker compose -f ./infra/docker-compose.yml run --rm terraform -chdir=deploy/ init
      - name: Terraform fmt
        run: docker compose -f ./infra/docker-compose.yml run --rm terraform -chdir=deploy/ fmt -check
      - name: Terraform validate
        run: docker compose -f ./infra/docker-compose.yml run --rm terraform -chdir=deploy/ validate
      - name: Terraform plan
        run: |
          workspace=$(cat .workspace)
          docker compose -f ./infra/docker-compose.yml run --rm terraform -chdir=deploy/ workspace select -or-create ${workspace}
          docker compose -f ./infra/docker-compose.yml run --rm terraform -chdir=deploy/ plan -out="${{ github.base_ref }}-tfplan"
      - name: Upload terraform plan output
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.base_ref }}-tfplan
          path: ./infra/deploy/${{ github.base_ref }}-tfplan
      - name: Terraform show plan output
        id: terraform-show-plan-output
        run: |
          TERRAFORM_PLAN=$(docker compose -f ./infra/docker-compose.yml run --rm terraform -chdir=deploy/ show -no-color "${{ github.base_ref }}-tfplan")
          
          delimiter="$(openssl rand -hex 8)"
          echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
          echo "## Terraform Plan Output" >> $GITHUB_OUTPUT
          echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo '```terraform' >> $GITHUB_OUTPUT
          echo "$TERRAFORM_PLAN" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "</details>" >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT
      - name: Publish Terraform Plan to Task Summary
        env:
          SUMMARY: ${{ steps.terraform-show-plan-output.outputs.summary }}
        run: |
          echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY
      - name: Add comment with terraform plan output
        uses: actions/github-script@v7
        env:
          SUMMARY: "${{ steps.terraform-show-plan-output.outputs.summary }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = `${process.env.SUMMARY}`;
            github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
            })
