name: Infrastructure - Continuous Deployment

on:
  push:
    branches:
      - main
      - staging
      - release
    paths:
      - '.github/workflows/infra-cd.yml'
      - 'infra/deploy/**'

env:
  AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform-apply:
    name: Terraform apply
    runs-on: ubuntu-22.04
    # permissions:
    #   contents: read
    #   pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Add env with branch name
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      - name: Set vars
        run: |
          if [[ $BRANCH_NAME == 'main' ]]; then
            echo "prod" > .workspace
          elif [[ $BRANCH_NAME == 'staging' ]]; then
            echo "staging" > .workspace
          elif [[ $BRANCH_NAME == 'release' ]]; then
            echo "release" > .workspace
          fi
      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.BRANCH_NAME }}-tfplan
      - name: Terraform init
        run: docker compose -f ./infra/docker-compose.yml run --rm terraform -chdir=deploy/ init
      - name: Terraform apply
        run: |
          workspace=$(cat .workspace)
          docker compose -f ./infra/docker-compose.yml run --rm terraform -chdir=deploy/ workspace select -or-create ${workspace}
          docker compose -f ./infra/docker-compose.yml run --rm terraform -chdir=deploy/ apply -auto-approve "${BRANCH_NAME}-tfplan"
      # - name: Terraform show plan output
      #   id: terraform-show-plan-output
      #   run: |
      #     TERRAFORM_PLAN=$(docker compose -f ./infra/docker-compose.yml run --rm terraform -chdir=deploy/ show -no-color "${{ github.base_ref }}-tfplan")
          
      #     delimiter="$(openssl rand -hex 8)"
      #     echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
      #     echo "## Terraform Plan Output" >> $GITHUB_OUTPUT
      #     echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
      #     echo "" >> $GITHUB_OUTPUT
      #     echo '```terraform' >> $GITHUB_OUTPUT
      #     echo "$TERRAFORM_PLAN" >> $GITHUB_OUTPUT
      #     echo '```' >> $GITHUB_OUTPUT
      #     echo "</details>" >> $GITHUB_OUTPUT
      #     echo "${delimiter}" >> $GITHUB_OUTPUT
      # - name: Publish Terraform Plan to Task Summary
      #   env:
      #     SUMMARY: ${{ steps.terraform-show-plan-output.outputs.summary }}
      #   run: |
      #     echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY
      # - name: Add comment with terraform plan output
      #   uses: actions/github-script@v7
      #   env:
      #     SUMMARY: "${{ steps.terraform-show-plan-output.outputs.summary }}"
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const body = `${process.env.SUMMARY}`;
      #       github.rest.issues.createComment({
      #           issue_number: context.issue.number,
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           body: body
      #       })
          